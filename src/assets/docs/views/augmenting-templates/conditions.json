{
  "title": "Adding Conditions",
  "id": "conditions",
  "section": "2.5. Augmenting your Template",
  "intro": "FieldLogs embeds a decision engine aimed at providing smarter templates. It dramatically reduces the number of Steps and actions a user has to scan in order to find what is relevant. Conditions are a great way to collect data only when required.",
  "blocks": [
    {
      "type": "h1",
      "content": "2.5.6. Defining Conditions"
    },
    {
      "type": "text",
      "content": "Conditions are defined as simple Script executions."
    },
    {
      "type": "warn",
      "content": "It is required for a Condition that the Last Instruction is an <a href='#/section/augmenting-templates/scripting#BasicInstructions'>'Expression Evaluation'</a> Instruction, and that this expression's result is a Boolean. If this expression returns 'true' the Step will be displayed, if not, it will remain hidden to the user."
    },
    {
      "type": "h2",
      "content": "2.5.6.1. Adding New Conditions"
    },
    {
      "type": "text",
      "content": "In the Template Editor, go ahead and open a new side panel from the top right hand corner."
    },
    {
      "type": "img",
      "img":"assets/images/doco-images/img_2-5-0-1.png",
      "imgAlt":"Add documentation button"
    },
    {
      "type": "info",
      "content": "Our condition editor is currently under-development therefore our current interface means conditions are defined very much like Scripts. For guidance on Scripting, please see the <a href='#/section/augmenting-templates/scripting'>'Scripting Section'</a>."
    },
    {
      "type": "image",
      "img":"assets/images/doco-images/img_2-5-6-1.png",
      "imgAlt":"Add conditions button",
      "caption":"The Condition Editor can be opened by clicking the <i class='fa fa-filter'></i> icon. After being presented with a blank script screen, proceed to add a new Instruction by clicking the <i class='fa fa-plus'></i> icon."
    },
    {
      "type": "warn",
      "content": "Only a subset of the Scripting instructions are available for condition definition. More information in the <a href='#/section/augmenting-templates/scripting#BasicInstructions'>'Scripting Section'</a>."
    },
    {
      "type": "h2",
      "content": "2.5.6.3. Usage Examples"
    },
    {
      "type": "text",
      "content": "Most of the simple conditions will have a format like, 'If the User gave a specific answer to a preceding Step'. This can be achieved easily with a simple Script:"
    },
    {
      "type": "bullet",
      "points": [
        {
          "text":"<b>1st</b> Instruction will retrieve the answer given by the user to the preceeding Step, and keep it in a Local Variable. See the <a href='#/section/augmenting-templates/scripting#StepValueInstructions'>'Get Step Value'</a> Instruction type"
        },
        {
          "text":"<b>2nd</b> Instruction will be an <a href='#/section/augmenting-templates/scripting#BasicInstructions'>'Expression Evaluation'</a> evaluating if the given answer matches the condition."
        }
      ]
    },
    {
      "type": "image",
      "img":"assets/images/doco-images/img_2-5-6-2.png",
      "imgAlt":"Add conditions button",
      "caption":"Here is an example of how the above example would look in the editor. You can see we are capturing a Step Value and storing it an a local Variable 'removeConfirm'. We then evaluate an expression on the variable to determine whether to keep hidden or whether to show the Step 9.2"
    }
  ]
}
